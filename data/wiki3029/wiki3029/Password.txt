Thus, of the common storage formats for passwords only when passwords have been salted and hashed is cracking both necessary and possible.
Here are some specific password management issues that must be considered in thinking about, choosing, and handling, a password.
In some implementations the user is required to pick from a series of images in the correct sequence in order to gain access.
*Envaulting technology is a password-free way to secure data on removable storage devices such as USB flash drives.
This problem is exacerbated by also reusing usernames, and by websites requiring email logins, as it makes it easier for an attacker to track a single user across multiple sites.
And, of course, passwords should be chosen so that they are hard for an attacker to guess and hard for an attacker to discover using any (and all) of the available automatic attack schemes.
For example, two-factor authentication will send you a text message, e-mail, or alert via a third-party app whenever a login attempt is made.
* The word "password"
The terms  '''passcode''' and '''passkey''' are sometimes used when the secret information is purely numeric, such as the personal identification number (PIN) commonly used for ATM access.
Notably, Bill Gates, speaking at the 2004 RSA Conference predicted the demise of  passwords saying "they just don't meet the challenge for anything you really want to secure."
The user's identity is verified by asking questions and comparing the answers to ones previously stored (i.e., when the account was opened).
Most browsers alert the user of a TLS/SSL protected exchange with a server by displaying a closed lock icon, or some other sign, when TLS is in use.
The overall system must, of course, be designed for sound security, with protection against computer viruses, man-in-the-middle attacks and the like.
MIT's CTSS, one of the first time sharing systems, was introduced in 1961.
Moving a step further, augmented systems for password-authenticated key agreement (e.g., AMP, B-SPEKE, PAK-Z, SRP-6) avoid both the conflict and limitation of hash-based methods.
The user’s password was used as a key to encrypt a fixed value.
These latter are obliged to deliver the tablet to the tribunes before dark.
Further, the message will be stored as plaintext on at least two computers: the sender's and the recipient's.
Having passwords which are only valid once makes many potential attacks ineffective.
In the example of a web-server, an online attacker can guess only at the rate at which the server will respond, while an off-line attacker (who gains access to the file) can guess at a rate limited only by the hardware that is brought to bear.
If any one of them is missing, he makes inquiry at once, as he knows by the marks from what quarter the tablet has not returned, and whoever is responsible for the stoppage meets with the punishment he merits.
Password strength is the likelihood that a password cannot be guessed or discovered, and varies with the attack algorithm used.
own name, date of birth, address, telephone number).
Passwords easily discovered are termed ''weak'' or ''vulnerable''; passwords very difficult or impossible to discover are considered ''strong''.
On many systems (including Unix-type systems) doing remote authentication, the shared secret usually becomes the hashed form and has the serious limitation of exposing passwords to offline guessing attacks.
If a cryptographic hash function is well designed, it is computationally infeasible to reverse the function to recover a plaintext password.
Single passwords are also much less convenient to change because many people need to be told at the same time, and they make removal of a particular user's access more difficult, as for instance on graduation or resignation.
Less extreme measures include extortion, rubber hose cryptanalysis, and side channel attack.
When a user types in a password on such a system, the password handling software runs through a cryptographic hash algorithm, and if the hash value generated from the user’s entry matches the hash stored in the password database, the user is permitted access.
Each time the user is required to authenticate, they look for the images that fit their pre-chosen categories and enter the randomly generated alphanumeric character that appears in the image to form the one-time password.
That "the password is dead" is a recurring idea in computer security.
However, some argue that this practice may lead to mistakes and stress, encouraging users to choose weak passwords.
In particular, attackers can quickly recover passwords that are short, dictionary words, simple variations on dictionary words or that use easily guessable patterns.
These include Microsoft's Cardspace, the Higgins project, the Liberty Alliance, NSTIC, the FIDO Alliance and various Identity 2.0 proposals.
Similar arguments were made by Forbes in not change passwords as often as many "experts" advise, due to the same limitations in human memory.
The numerous ways in which permanent or semi-permanent passwords can be compromised has prompted the development of other techniques.
And, of course, if the new password is given to a compromised employee, little is gained.
Email is sometimes used to distribute passwords but this is generally an insecure method.
Despite the name, there is no need for passwords to be actual words; indeed passwords which are not actual words may be harder to guess, a desirable property.
Matt Honan, a journalist at Wired, who was the victim of a hacking incident, in 2012 wrote "The age of the password has come to an end."
In 2011 IBM predicted  that, within five years, "You will never need a password again."
If it is hashed but not salted then it is vulnerable to rainbow table attacks (which are more efficient than cracking).
Studies of production computer systems have consistently shown that a large fraction of all user-chosen passwords are readily guessed automatically.
Jeremy Grant, head of   NSTIC initiative (the US Dept.
Lists of common passwords are also typically tested.
Some governments have national authentication frameworks that define requirements for user authentication to government services, including requirements for passwords.
In 2013, Google released a list of the most common password types, all of which are considered insecure because they are too easy to guess (especially after researching an individual on social media):
The system was based on a simulated Hagelin rotor crypto machine, and first appeared in 6th Edition Unix in 1974.
only 128 times harder to crack for 7-letter passwords, less if the user simply capitalises one of the letters).
They have, however, been widely implemented in personal online banking, where they are known as Transaction Authentication Numbers (TANs).
Some systems impose a time-out of several seconds after a small number (e.g., three) of failed password entry attempts.
Cryptologists and computer scientists often refer to the strength or 'hardness' in terms of entropy.
They argue that "no other single technology matches their combination of cost, immediacy and convenience" and that "passwords are themselves the best fit for many of the scenarios in which they are currently used."
Passwords are generally short enough to be easily memorized and typed.
(He nevertheless maintained, based on these data, that the general quality of passwords has improved over the years—for example, average length was up to eight characters from under seven in previous surveys, and less than 4% were dictionary words.)
All do the same until it reaches the first maniples, those encamped near the tents of the tribunes.
The challenge and response were changed every three days.
Password cracking tools can operate by brute force (i.e.
of Commerce National Strategy for Trusted Identities in Cyberspace), declared "Passwords are a disaster from a security perspective, we want to shoot them dead."
An attacker can, however, use widely available tools to attempt to guess the passwords.
If it is carried as packeted data over the Internet, anyone able to watch the packets containing the logon information can snoop with a very low probability of detection.
Physical security issues are also a concern, from deterring shoulder surfing to more sophisticated physical threats such as video cameras and keyboard sniffers.
Changing a password will not prevent abuse in most cases, since the abuse would often be immediately noticeable.
Eric Grosse, VP of security engineering at Google, states that "passwords and simple bearer tokens, such as cookies, are no longer sufficient to keep users safe."
If it is reversibly encrypted then if the attacker gets the decryption key along with the file no cracking is necessary, while if he fails to get the key cracking is not possible.
Similarly, the more stringent requirements for password strength, e.g.
(See Password cracking.)
Users may use simpler passwords or develop variation patterns on a consistent theme to keep their passwords memorable.
A later version of his algorithm, known as crypt(3), used a 12-bit salt and invoked a modified form of the DES algorithm 25 times to reduce the risk of pre-computed dictionary attacks.
The easier a password is for the owner to remember generally means it will be easier for an attacker to guess.
Now they are more than dead."
Combining two or more unrelated words is another good method, but a single dictionary word is not.
In addition, when the hash is used as a shared secret, an attacker does not need the original password to authenticate remotely; they only need the hash.
One system requires users to select a series of faces as a password, utilizing the human brain's ability to recall faces easily.
In ''The Memorability and Security of Passwords'',  Jeff Yan et al.
Previous or subsequent relays of the email will not be protected and the email will probably be stored on multiple computers, certainly on the originating and receiving computers, most often in clear text.
The purpose of this measure is to avoid bystanders reading the password.
Sentries would challenge those wishing to enter an area or approaching it to supply a password or ''watchword'', and would only allow a person or group to pass if they knew the password.
* Time-synchronized one-time passwords are similar in some ways to single-use passwords, but the value to be entered is displayed on a small (generally pocketable) item and changes every minute or so.
This presents a substantial security risk, since an attacker need only compromise a single site in order to gain access to other sites the victim uses.
*2D Key (2-Dimensional Key) is a 2D matrix-like key input method having the key styles of multiline passphrase, crossword, ASCII/Unicode art, with optional textual semantic noises, to create big password/key beyond 128 bits to realize the MePKC (Memorizable Public-Key Cryptography) using fully memorizable private key upon the current private key management technologies like encrypted private key, split private key, and roaming private key.
However, asking users to remember a password consisting of a "mix of uppercase and lowercase characters" is similar to asking them to remember a sequence of bits: hard to remember, and only a little bit harder to crack (e.g.
Unfortunately, some are inadequate in practice, and in any case few  have become universally available for users seeking a more secure alternative.
The risk of interception of passwords sent over the Internet can be reduced by, among other approaches, using cryptographic protection.
More secure systems store each password in a cryptographically protected form, so access to the actual password will still be difficult for a snooper who gains internal access to the system, while validation of user access attempts remains possible.
So that if all those issued are returned, the tribune knows that the watchword has been given to all the maniples, and has passed through all on its way back to him.
good guesses made by the legitimate password owner.
If the attacker finds a match, they know that their guess is the actual password for the associated user.
This claim has been made by numerous people at least since 2004.
However, if someone may have had access to the password through some means, such as sharing a computer or breaching a different site, changing the password limits the window for abuse.
upper and lower case, numbers, and special characters), prohibited elements (e.g.
Two factor authentication makes passwords more secure.
Roger Needham invented the now common approach of storing only a "hashed" form of the plaintext password.
If it passes through intermediate systems during its travels, it will probably be stored on there as well, at least for some time, and may be copied to backup, cache or history files on any of these systems.
Instead of user passwords, access control is based on the user's access to a network resource.
An augmented system allows a client to prove knowledge of the password to a server, where the server knows only a (not exactly) hashed password, and where the unhashed password is required to gain access.
If an attacker gains access to such an internal password store, all passwords—and so all user accounts—will be compromised.
They have proven easy to spoof in some famous incidents testing commercially available systems, for example,  the gummie fingerprint spoof demonstration, and, because these characteristics are unalterable, they cannot be changed if compromised; this is a highly important consideration in access control as a compromised access token is necessarily insecure.
Most users find single use passwords extremely inconvenient.
Some passwords are formed from multiple words and may more accurately be called a passphrase.
He also reported that the single most common password was ''password1'', confirming yet again the general lack of informed care in choosing passwords among users.
Many systems store  a cryptographic hash of the password.
Password reuse can be avoided or minimused by using mnemonic techniques, writing passwords down on paper, or using a password manager.
Lists of common passwords are widely available and can make password attacks very efficient.
Similarly typing the password one keyboard row higher is a common trick known to attackers.
They found that passwords based on thinking of a phrase and taking the first letter of each word are just as memorable as naively selected passwords, and just as hard to crack as randomly generated passwords.
Usually, a system must provide a way to change a password, either because a user believes the current password has been (or might have been) compromised, or as a precautionary measure.
It had a LOGIN command that requested a user password.
More recent Unix or Unix like systems (e.g., Linux or the various BSD systems) use more secure password hashing algorithms  such as PBKDF2, bcrypt, and scrypt which have large salts and an adjustable cost or number of iterations.
Such policies usually provoke user protest and foot-dragging at best and hostility at worst.
Heather Adkins, manager of Information Security at Google, in 2013 said that "passwords are done at Google."
As a result, some security experts recommend either making up one's own questions or giving false answers.
If an attacker gains access to the password file, then if it is stored as plain text, no cracking is necessary.
If an attacker gets access to the file of hashed passwords guessing can be done off-line, rapidly testing candidate passwords against the true password's hash value.
Christopher Mims, writing in the Wall Street Journal said the password "is finally dying" and predicted their replacement by device-based authentication.
If some users employ the same password for accounts on different systems, those will be compromised as well.
The claim that "the password is dead" is often used by advocates of alternatives to passwords, such as Biometrics, Two-factor authentication or Single sign-on.
However, passwords which are difficult to remember may also reduce the security of a system because (a) users might need to write down or electronically store the password, (b) users will need frequent password resets and (c) users are more likely to re-use the same password.
trying every possible combination of characters) or by hashing every word from a list; large lists of possible passwords in many languages are widely available on the Internet.
The main storage methods for passwords are plain text, hashed, hashed and salted, and reversibly encrypted.
If the password is carried as electrical signals on unsecured physical wiring between the user access point and the central system controlling the password database, it is subject to snooping by wiretapping methods.
The most widely used is the Transport Layer Security (TLS, previously called SSL) feature built into most current Internet browsers.
Identity management systems are increasingly used to automate issuance of replacements for lost passwords, a feature called self service password reset.
*Non-text-based passwords, such as graphical passwords or mouse-movement based passwords.
Unfortunately, there is a conflict between stored hashed-passwords and hash-based challenge-response authentication; the latter requires a client to prove to a server that they know what the shared secret (i.e., password) is, and to do this, the server must be able to obtain the shared secret from its stored form.
The existence of password cracking tools allows attackers to easily recover poorly chosen passwords.
The necessary keys are usually too large to memorize (but see proposal Passmaze) and must be stored on a local computer, security token or portable memory device, such as a USB flash drive or even floppy disk.
The stored data—sometimes called the "password verifier" or the "password hash"—is often stored in Modular Crypt Format or RFC 2307 hash format, sometimes in the /etc/passwd file or the /etc/shadow file.
examine the effect of advice given to users about a good choice of password.
In the absence of other vulnerabilities, such systems can be effectively secure with relatively simple passwords, if they have been well chosen and are not easily guessed.
It has been argued by Redmond researchers Dinei Florencio and Cormac Herley, together with Paul C. van Oorschot of Carleton University, Canada, that password reuse is inevitable, and that users should reuse passwords for low-security websites (which contain little personal data and no financial information, for example) and instead focus their efforts on remember long, complex passwords for a few important accounts, such as bank accounts.
*Biometric methods promise authentication based on unalterable personal characteristics, but currently (2008) have high error rates and require additional hardware to scan, for example, fingerprints, irises, etc.
These programs are sometimes used by system administrators to detect weak passwords proposed by users.
If a new password is passed to the system in unencrypted form, security can be lost (e.g., via wiretapping) before the new password can even be installed in the password database.
A poorly designed hash function can make attacks feasible even if a strong password is chosen.
Nowadays, it is a common practice for computer systems to hide passwords as they are typed.
Graphical passwords are an alternative means of authentication for log-in intended to be used in place of conventional password; they use images, graphics or colours instead of letters, digits or special characters.
Many web authentication systems use SSL to establish an encrypted session between the browser and the server, and is usually the underlying meaning of claims to have a "secure Web site".
Passwords are vulnerable to interception (i.e., "snooping") while being transmitted to the authenticating machine or person.
Effective access control provisions may force extreme measures on criminals seeking to acquire a password or biometric token.
Studies on this subject have been made to determine its usability in the real world.
Since most email is sent as plaintext, a message containing a password is readable without effort during transport by any eavesdropper.
Asking users to use "both letters and digits" will often lead to easy-to-guess substitutions such as 'E' → '3' and 'I' → '1', substitutions which are well known to attackers.
* The name of a pet, child, family member, or significant other
As most home users only perform a small number of transactions each week, the single use issue has not led to intolerable customer dissatisfaction in this case.
Avivah Litan of Gartner said in 2014 "Passwords were dead a few years ago.
"After typing PASSWORD, the system turns off the printing mechanism, if possible, so that the user may type in his password with privacy."
Another graphical password solution creates a one-time password using a randomly generated grid of images.
In "The Persistence of Passwords," Cormac Herley and Paul van Oorschot suggest that every effort should be made to end the "spectacularly incorrect assumption" that passwords are dead.
According to a survey by the University of London, one in ten people are now leaving their passwords in their wills to pass on this important information when they die.
A related method, rather more efficient in most cases, is a dictionary attack.
The hash value is created by applying a cryptographic hash function to a string consisting of the submitted password and, in many implementations, another value known as a salt.
The FIDO Alliance promises a "passwordless experience" in its 2015 specification document.
A 2012 paper examines why passwords have proved so hard to supplant (despite numerous predictions that they would soon be a thing of the past); in examining thirty representative proposed replacements with respect to security, usability and deployability they  conclude "none even retains the full set of benefits that legacy passwords already provide."
* Something related to a favorite sports team
These tools work by hashing possible passwords and comparing the result of each guess to the actual password hashes.
The use of passwords is known to be ancient.
See password strength and computer security.
Security in such situations depends on using passwords or passphrases of adequate complexity, making such an attack computationally infeasible for the attacker.
Passwords in military use evolved to include not just a password, but a password and a counterpassword; for example in the opening days of the Battle of Normandy, paratroopers of the U.S. 101st Airborne Division used a password—''flash''—which was presented as a challenge, and answered with the correct response—''thunder''.
Passwords have been used with computers since the earliest days of computing.
American paratroopers also famously used a device known as a "cricket" on D-Day in place of a password system as a temporarily unique method of identification; one metallic click given by the device in lieu of a password was to be met by two clicks in reply.
There are several other techniques in use; see cryptography.
In modern times, user names and passwords are commonly used by people during a log in process that controls access to protected computer operating systems, mobile phones, cable TV decoders, automated teller machines (ATMs), etc.
Using client-side encryption will only protect transmission from the mail handling system server to the client machine.
In the early 1970s, Robert Morris developed a system of storing login passwords in a hashed form as part of the Unix operating system.
A typical computer user has passwords for many purposes: logging into accounts, retrieving e-mail, accessing applications, databases, networks, web sites, and even reading the morning newspaper online.
Attempting to crack passwords by trying as many possibilities as time and money permit is a brute force attack.
MD5 and SHA1 are frequently used cryptographic hash functions but they are not recommended for password hashing unless they are used as part of a larger construction such as in PBKDF2.
The security of a password-protected system depends on several factors.
It often accompanies arguments that the replacement of passwords by a more secure means of authentication is both necessary and imminent.
* Name of a favorite holiday
Passwords that are used to generate cryptographic keys (e.g., for disk encryption or Wi-Fi security) can also be subjected to high rate guessing.
There is often an increase in the people who note down the password and leave it where it can easily be found, as well as helpdesk calls to reset a forgotten password.
See key stretching.
* Anniversary dates and birthdays
See LM hash for a widely deployed, and insecure, example.
The way in which they secure the passing round of the watchword for the night is as follows: from the tenth maniple of each class of infantry and cavalry, the maniple which is encamped at the lower end of the street, a man is chosen who is relieved from guard duty, and he attends every day at sunset at the tent of the tribune, and receiving from him the watchword—that is a wooden tablet with the word inscribed on it – takes his leave, and on returning to his quarters passes on the watchword and tablet before witnesses to the commander of the next maniple, who in turn passes it to the one next him.
*Single sign-on technology is claimed to eliminate the need for having multiple passwords.
It is common practice amongst computer users to reuse the same password on multiple sites.
Some computer systems store user passwords as plaintext, against which to compare user log on attempts.
The reasons given often include reference to the Usability as well as security problems of passwords.
Others argue longer passwords provide more security (e.g., entropy) than shorter passwords with a wide variety of characters.
Some systems, such as PGP and Wi-Fi WPA, apply a computation-intensive hash to the password to slow such attacks.
For example, Columbia University found 22% of user passwords could be recovered with little effort.
Because of these issues, there is some debate as to whether password aging is effective.
"Password aging" is a feature of some operating systems which forces users to change passwords frequently (e.g., quarterly, monthly or even more often).
Many initiatives have been launched with the explicit goal of eliminating passwords.
This is done automatically by the browser and increases integrity of the session, assuming neither end has been compromised and that the SSL/TLS implementations used are high quality ones.
One third of people, according to the poll, agree that their password protected data is important enough to pass on in their will.
* PassWindow one-time passwords are used as single-use passwords, but the dynamic characters to be entered are visible only when a user superimposes a unique printed visual key over a server generated challenge image shown on the user's screen.
* Single-use passwords.
Transmission of the password, via the browser, in plaintext means it can be intercepted along its journey to the server.
In a dictionary attack, all words in one or more dictionaries are tested.
Having a personally designed algorithm for generating obscure passwords is another good method
In spite of these predictions and efforts to replace them passwords still appear as the dominant form of authentication on the web.
The most secure don't store passwords at all, but a one-way derivation, such as a polynomial, modulus, or an advanced hash function.
"have a mix of uppercase and lowercase letters and digits" or "change it monthly", the greater the degree to which users will subvert the system.
As yet, no satisfactory standard has been developed.
A modified version of the DES algorithm was used as the basis for the password hashing algorithm in early Unix systems.
